(in-package :boxer)

;;;; 32   BOXER-CHANGE-ALU                             (NEW-ALU)
;;;; 33   BOXER-CHANGE-PEN-WIDTH                       (NEW-WIDTH)
;;;; 34   BOXER-CHANGE-GRAPHICS-FONT                   (NEW-FONT-NO)
;;;; 35   BOXER-LINE-SEGMENT                           (X0 Y0 X1 Y1)
;;;; 36   BOXER-CHANGE-GRAPHICS-COLOR                  (NEW-COLOR)
;;;; 39   BOXER-CENTERED-STRING                        (X Y STRING)
;;;; 40   BOXER-LEFT-STRING                            (X Y STRING)
;;;; 41   BOXER-RIGHT-STRING                           (X Y STRING)
;;;; 42   BOXER-CENTERED-RECTANGLE                     (X Y WIDTH HEIGHT)
;;;; 43   BOXER-DOT                                    (X Y)
;;;; 47   BOXER-CENTERED-BITMAP                        (BITMAP X Y WIDTH HEIGHT)
;;;; 60   BOXER-FILLED-ELLIPSE                         (X Y WIDTH HEIGHT)
;;;; 61   BOXER-ELLIPSE                                (X Y WIDTH HEIGHT)
;;;; 62   BOXER-FILLED-CIRCLE                          (X Y RADIUS)
;;;; 63   BOXER-CIRCLE                                 (X Y RADIUS)

(defmacro boxer-playback-graphics-list (gl &key (start 0) (graphics-canvas nil))
  `(with-graphics-state (,gl t)
       (do-vector-contents (command ,gl :start ,start)
        (format t "~%New Boxer Playback: ~A" command)
        (cond ((eq (aref command 0) 33)
               (draw-boxer-change-pen-width command))
              ((eq (aref command 0) 35)
               (draw-boxer-line-segment command))
              ((eq (aref command 0) 36)
               (draw-boxer-change-graphics-color command))
              ((eq (aref command 0) 39)
               (draw-boxer-centered-string command))
              ((eq (aref command 0) 42)
               (draw-boxer-centered-rectangle command))
              ((eq (aref command 0) 47)
               (draw-boxer-centered-bitmap command))
              ((eq (aref command 0) 60)
               (draw-boxer-filled-ellipse command))
              (t
               nil))
        ;;  (process-graphics-command-marker command)
)))

;; 33   BOXER-CHANGE-PEN-WIDTH              (NEW-WIDTH)

(defun draw-boxer-change-pen-width (com)
  (%set-pen-size (aref com 1)))

;; 35   BOXER-LINE-SEGMENT                           (X0 Y0 X1 Y1)
(defun draw-boxer-line-segment (com)
  "Takes a boxer command starting with 35:
    ex #(35 -0.5 -0.5 0.0 0.5)"
  (draw-line (aref com 1) (aref com 2) (aref com 3) (aref com 4)))

;; 36   BOXER-CHANGE-GRAPHICS-COLOR                  (NEW-COLOR)
(defun draw-boxer-change-graphics-color (com)
  (%set-pen-color (aref com 1)))

;; 39   BOXER-CENTERED-STRING             (X Y STRING)
(defun draw-boxer-centered-string (com)
  (let* ((wid (string-wid *graphics-state-current-font-no* (aref com 3)))
         (hei (string-hei *graphics-state-current-font-no*))
         (x (- (aref com 1) (/ wid 2)))
         (y (- (aref com 2) (/ hei 2))))
    (draw-string *graphics-state-current-font-no* (aref com 3)
               x y)))

;; 42   BOXER-CENTERED-RECTANGLE       (X Y WIDTH HEIGHT)
(defun draw-boxer-centered-rectangle (com)
  (draw-rectangle (aref com 3) (aref com 4)
    (- (aref com 1) (/ (aref com 3) 2))
    (- (aref com 2) (/ (aref com 4) 2))))

;; 47   BOXER-CENTERED-BITMAP          (BITMAP X Y WIDTH HEIGHT)
(defun draw-boxer-centered-bitmap (com)
  (bitblt-to-screen (aref com 4) (aref com 5) (aref com 1) 0 0
                    (- (aref com 2) (floor (aref com 4) 2))
                    (- (aref com 3) (floor (aref com 5) 2))))

;;;; 60   BOXER-FILLED-ELLIPSE        (X Y WIDTH HEIGHT)
(defun draw-boxer-filled-ellipse (com)
  (draw-ellipse (- (aref com 1) (/ (aref com 3) 2))
                (- (aref com 2) (/ (aref com 4) 2))
                (aref com 3) (aref com 4) t))
